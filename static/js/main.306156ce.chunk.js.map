{"version":3,"sources":["components/Form/Input.js","components/Form/Button.js","components/Form/Form.js","components/ResultsList/Instruction.js","components/ResultsList/ListItem.js","components/ResultsList/List.js","components/ResultsList/Results.js","components/App.js","components/LoadingIndicator/LoadingIndicator.js","index.js"],"names":["Input","value","handleInput","type","onChange","className","placeholder","Button","Form","submit","action","onSubmit","Instruction","ingridentsWithMeasure","item","closePopup","onClick","strMeal","src","strMealThumb","alt","map","ingri","key","idMeal","id","name","measure","strYoutube","href","target","rel","strInstructions","ListItem","useState","activeInstruction","setActiveInstruction","handleInstructionButton","i","push","List","data","index","React","memo","search","setData","isLoading","setIsLoading","fetchData","useCallback","trackPromise","fetch","then","response","ok","Error","json","resp","meals","catch","error","console","log","useEffect","resultsInfo","length","App","inputValue","setValue","searchValue","setSearch","result","e","preventDefault","LoadingIndicator","usePromiseTracker","promiseInProgress","color","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.306156ce.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Input.scss\";\n\nconst Input = ({ value, handleInput }) => {\n  return (\n    <input\n      type=\"text\"\n      value={value}\n      onChange={handleInput}\n      className=\"form__input input\"\n      placeholder=\"write meal name\"\n    />\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport \"./Button.scss\";\n\nconst Button = () => {\n  return <button className=\"form__button button\">search</button>;\n};\n\nexport default Button;\n","import React from \"react\";\nimport Input from \"./Input\";\nimport Button from \"./Button\";\nimport \"./Form.scss\";\n\nconst Form = ({ submit, value, handleInput }) => {\n  return (\n    <form action=\"submit\" onSubmit={submit} className=\"form\">\n      <Input value={value} handleInput={handleInput} />\n      <Button />\n    </form>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport \"./Instruction.scss\";\n\nconst Instruction = ({ ingridentsWithMeasure, item, closePopup }) => {\n  return (\n    <div className=\"popup\">\n      <div className=\"item list__item list__item--active\">\n        <button\n          className=\"close-button popup__close-button \"\n          onClick={closePopup}\n        >\n          <span className=\"close-button__box\">\n            <span className=\"close-button__inner\"></span>\n          </span>\n        </button>\n        <p className=\"item__meal-name\">{item.strMeal}</p>\n        <div className=\"item__details \">\n          <div className=\"item__photo-wrapper\">\n            <img\n              src={item.strMealThumb}\n              alt=\"meal\"\n              className=\"item__photo\"\n            ></img>\n          </div>\n          <div className=\"item__ingridents\">\n            {ingridentsWithMeasure.map(ingri => (\n              <div key={item.idMeal + ingri.id} className=\"item__ingrident\">\n                <span className=\"item__ingrident-name\">{ingri.name}</span>\n                <span className=\"item__measure\">{ingri.measure}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className=\"item__buttons-wrapper\">\n          {item.strYoutube && (\n            <a\n              href={item.strYoutube}\n              className=\"item__button item__button--bigger\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              go to video{\" \"}\n            </a>\n          )}\n        </div>\n        <p className=\"item__instruction-text\">{item.strInstructions}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Instruction;\n","import React, { useState } from \"react\";\nimport \"./ListItem.scss\";\nimport Instruction from \"./Instruction\";\n\nconst ListItem = ({ item }) => {\n  const [activeInstruction, setActiveInstruction] = useState(false);\n\n  const handleInstructionButton = () => {\n    setActiveInstruction(!activeInstruction);\n  };\n\n  let ingridentsWithMeasure = [];\n  // I know that max quantity of ingridents is 20, igridents start from 1 not from 0. Ingrident and measure have the same number\n  for (let i = 1; i <= 20; i++) {\n    if (\n      item[`strIngredient${i}`] !== \"\" &&\n      item[`strIngredient${i}`] !== null\n    ) {\n      ingridentsWithMeasure.push({\n        id: i,\n        name: item[`strIngredient${i}`],\n        measure: item[`strMeasure${i}`]\n      });\n    }\n  }\n\n  return (\n    <li className=\"item list__item\">\n      <p className=\"item__meal-name\">{item.strMeal}</p>\n      <div className=\"item__details\">\n        <div className=\"item__photo-wrapper\">\n          <img src={item.strMealThumb} alt=\"meal\" className=\"item__photo\"></img>\n        </div>\n        <div className=\"item__ingridents\">\n          {ingridentsWithMeasure.map(ingri => (\n            <div key={item.idMeal + ingri.id} className=\"item__ingrident\">\n              <span className=\"item__ingrident-name\">{ingri.name}</span>\n              <span className=\"item__measure\">{ingri.measure}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"item__buttons-wrapper\">\n        {item.strYoutube && (\n          <a\n            href={item.strYoutube}\n            className=\"item__button\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            go to video{\" \"}\n          </a>\n        )}\n        <button className=\"item__button\" onClick={handleInstructionButton}>\n          instruction\n        </button>\n      </div>\n      {activeInstruction && (\n        <Instruction\n          ingridentsWithMeasure={ingridentsWithMeasure}\n          item={item}\n          closePopup={handleInstructionButton}\n        />\n      )}\n    </li>\n  );\n};\n\nexport default ListItem;\n","import React from \"react\";\nimport ListItem from \"./ListItem\";\nimport \"./List.scss\";\n\nconst List = ({ data }) => {\n  return (\n    <ul className=\"list results__list\">\n      {data.map((item, index) => (\n        <ListItem key={index + 1} item={item} />\n      ))}\n    </ul>\n  );\n};\n\nexport default List;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport List from \"./List\";\nimport { trackPromise } from \"react-promise-tracker\";\n\nconst Results = ({ search }) => {\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchData = useCallback(() => {\n    setIsLoading(true);\n    trackPromise(\n      fetch(`https://www.themealdb.com/api/json/v1/1/search.php?s=${search}`)\n        .then(response => {\n          if (response.ok) {\n            return response;\n          } else {\n            throw Error(\"Something gone wrong :(\");\n          }\n        })\n        .then(response => {\n          return response.json();\n        })\n        .then(\n          resp => {\n            if (resp.meals) {\n              setData([...resp.meals]);\n            } else setData(false);\n            setIsLoading(false);\n          },\n\n          []\n        )\n        .catch(error => {\n          console.log(error);\n          setIsLoading(false);\n        })\n    );\n  }, [search]);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  let resultsInfo = \"\";\n\n  if (data && !isLoading) {\n    resultsInfo = (\n      <p className=\"results-info\">\n        {data.length} {data.length === 1 ? `result` : `results`} for \"{search}\"\n      </p>\n    );\n  } else if (!data && !isLoading) {\n    resultsInfo = <p className=\"results-info\"> no results for \"{search}\"</p>;\n  }\n\n  return (\n    <div className=\"results app__results\">\n      {resultsInfo}\n      {data && <List data={data} />}\n    </div>\n  );\n};\n\nexport default React.memo(Results);\n","import React, { useState } from \"react\";\nimport \"./App.scss\";\nimport Form from \"./Form/Form\";\nimport Results from \"./ResultsList/Results\";\n\nfunction App() {\n  const [inputValue, setValue] = useState(\"\");\n  const [searchValue, setSearch] = useState(false);\n\n  const handleForm = e => {\n    e.preventDefault();\n    setSearch(inputValue);\n  };\n\n  const handleInput = e => {\n    setValue(e.target.value);\n  };\n\n  let result = \"\";\n\n  if (searchValue !== false)\n    result = <p className=\"results-info\">please type at least two chars</p>;\n\n  if (searchValue.length >= 2) {\n    result = <Results search={searchValue} />;\n  }\n  return (\n    <div className=\"wrapper\">\n      <Form submit={handleForm} value={inputValue} handleInput={handleInput} />\n      {result}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport Loader from \"react-loader-spinner\";\nimport \"./LoadingIndicator.scss\";\n\nconst LoadingIndicator = () => {\n  const { promiseInProgress } = usePromiseTracker();\n  return (\n    promiseInProgress && (\n      <div className=\"loader\">\n        <Loader type=\"ThreeDots\" color=\"#1e58ff\" />\n      </div>\n    )\n  );\n};\n\nexport default LoadingIndicator;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./components/App\";\nimport LoadingIndicator from \"./components/LoadingIndicator/LoadingIndicator\";\n\nReactDOM.render(\n  <>\n    <App />\n    <LoadingIndicator />\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}